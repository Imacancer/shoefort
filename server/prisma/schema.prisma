generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  customer
  admin
}

enum PaymentMethod {
  creditCard
  paypal
  gcash
}

enum TransactionStatus {
  pending
  completed
  cancelled
}

model User {
  id        String @id @default(uuid())
  email     String @unique
  password  String
  name      String
  role      Role @default(customer)
  customer  Customer?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Customer {
  id       String @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String @unique
  transactions Transaction[]
}

model Product {
  id           String    @id @default(uuid())
  product_name String
  status       Boolean   @default(true)
  featured     Boolean   @default(false)
  imgUrl       String?
  variants     Variant[]
  transactions Transaction[]
}

model Transaction {
  customerId String
  productId String
  amount    Int
  payment_method PaymentMethod?
  trannsaction_status TransactionStatus @default(pending)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  customer  Customer @relation(fields: [customerId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  @@id([customerId, productId])
}

model Variant {
  id        String         @id @default(uuid())
  productId String
  price     Int
  size      String
  category  Category?
  status    Boolean        @default(true)
  qty       Int
  colors    ColorVariant[]
  product   Product        @relation(fields: [productId], references: [id])
}

model ColorVariant {
  id        String  @id @default(uuid())
  value     String
  variantId String
  status    Boolean @default(true)
  variant   Variant @relation(fields: [variantId], references: [id])
}

enum Category {
  Mens
  Womens
  Kids
}
